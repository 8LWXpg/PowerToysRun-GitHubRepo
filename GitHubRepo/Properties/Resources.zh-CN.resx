<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
     Microsoft ResX Schema

         Version 2.0

    T    he primary goals of this format is to allow a simple XML format
    th at is mostly human readable. The generation and parsing of the
    var ious data types are done through the TypeConverter classes
    asso ciated with the data types.

    Exampl    e:

    ... ado.    net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of                 "resheader" rows that contain simple
    name/value pairs.

    E ach data row contains a n    ame, and value. The row also contains a
    type or mimetype. Type corr esponds to a .NET class that support
    text/value conversion throug h the TypeConverter architecture.
    Classes that don't support th is are serialized and stored with the
    mimetype set.

    The mimetyp e is used for seriali    zed objects, and tells the
    ResXResourceReader how to depersi st the object. This is currently not
    extensible. For a given mimetype t he value must be set accordingly:

    Note - application/x-microsoft.net.o    bject.binary.base64 is the format
    that the ResXResourceWriter will gene rate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.ob    ject.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.For matters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.    soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatte rs.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverte r
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="context_copy_link" xml:space="preserve">
    <value>复制链接 (Ctrl+C)</value>
  </data>
  <data name="context_open_issues" xml:space="preserve">
    <value>打开 issues (Ctrl+I)</value>
  </data>
  <data name="context_open_pull_requests" xml:space="preserve">
    <value>打开 pull requests (Ctrl+P)</value>
  </data>
  <data name="option_auth_token" xml:space="preserve">
    <value>GitHub 验证令牌</value>
  </data>
  <data name="option_default_user" xml:space="preserve">
    <value>默认用户</value>
  </data>
  <data name="option_default_user_desc" xml:space="preserve">
    <value>当用户输入“/”时使用</value>
  </data>
  <data name="default_user_not_set" xml:space="preserve">
    <value>默认用户未设置</value>
  </data>
  <data name="default_user_not_set_description" xml:space="preserve">
    <value>更改设置</value>
  </data>
  <data name="plugin_description" xml:space="preserve">
    <value>查找 GitHub 仓库</value>
  </data>
  <data name="open_github" xml:space="preserve">
    <value>打开 GitHub</value>
  </data>
  <data name="in_browser_name" xml:space="preserve">
    <value>通过 {0}</value>
    <comment>Like "Search the web in {the browser name}"</comment>
  </data>
  <data name="plugin_name" xml:space="preserve">
    <value>GitHub 仓库</value>
  </data>
</root>
